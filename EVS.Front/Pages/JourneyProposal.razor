@page "/journeyproposal"
@using MudBlazor
@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using MudBlazor
@using FluentValidation
@using Severity = MudBlazor.Severity
@inject ISnackbar Snackbar



<MudGrid Spacing="0">
	<MudItem xs="5">
		<MudText Typo="Typo.h2" Color="Color.Primary" Style="margin:2em 0 0 3em;">Proposez votre Trajet</MudText>

	</MudItem>



	<MudItem xs="7" Style="max-width:100%">
		<MudPaper Style="padding: 1em; margin-top:3em">
			<MudForm>


				<MudText Style=" margin:2em 0 1em 0;" Typo="Typo.h5" class="form-label" Color="Color.Primary">D'où partez vous?</MudText>

				<MudTextField T="string" data-google-autocomplete="true" data-value-field="city_from_selectedValue" Placeholder="Ville de départ" Adornment="Adornment.Start" AdornmentColor="Color.Primary" AdornmentIcon="@Icons.Material.Filled.Start" />
				<input type="hidden" name="city_from_selectedValue" value="" />


				<MudText Style=" margin:2em 0 1em 0;" Typo="Typo.h5" class="form-label" Color="Color.Primary">Où allez vous?</MudText>

				<MudTextField T="string" data-google-autocomplete="true" data-value-field="city_to_selectedValue" Placeholder="Ville d'arrivée" Adornment="Adornment.Start" AdornmentColor="Color.Primary" AdornmentIcon="@Icons.Material.Filled.KeyboardTab" />
				<input type="hidden" name="city_to_selectedValue" value="" />

				<MudText Style=" margin:2em 0 1em 0;" Typo="Typo.h5" class="form-label" Color="Color.Primary">Quand souhaitez vous prendre la route?</MudText>
				<MudDatePicker @bind-Date="date" MinDate="DateTime.Today" Adornment="Adornment.Start" AdornmentColor="Color.Primary" />

				<MudText Style="margin:2em 0 1em 0;" Typo="Typo.h5" class="form-label" Color="Color.Primary">Combien de passagers souaitez-vous emmener ?</MudText>
				<MudGrid Spacing="0" class="counter">

					<MudItem xs="9">

						<MudSlider TickMarks="true" Color="Color.Secondary" @bind-Value="@NumberPassager" TickMarkLabels="@labels" Step="1" Max="5" Min="1" />
					</MudItem>
					<MudItem xs="3">
						<MudText Typo="Typo.h4" Color="Color.Secondary" Style="margin-left:1em">@NumberPassager </MudText>
					</MudItem>
				</MudGrid>

				<MudText Style=" margin:2em 0 1em 0;" Typo="Typo.h5" class="form-label" Color="Color.Primary">Quel est le prix de chaque place ?</MudText>

				<MudGrid Spacing="0" class="counter">

					<MudItem xs="9">
						<MudSlider TickMarks="true" Color="Color.Secondary" @bind-Value="@NumberPrice" Step="1" Max="99" Min="1" />
					</MudItem>
					<MudItem xs="3">
						<MudText Typo="Typo.h4" Color="Color.Secondary" Style="margin-left:1em">@NumberPrice €</MudText>
					</MudItem>

				</MudGrid>

				<MudCardActions>
					<MudButton Variant="Variant.Filled" Style="margin:2em 0;" Color="Color.Primary" Class="ml-auto" OnClick="@(async () => await Submit())">Creer votre trajet</MudButton>
				</MudCardActions>


			</MudForm>
		</MudPaper>
	</MudItem>

</MudGrid>




@functions {
	int NumberPrice = 15;
	int NumberPassager;
	string[] labels = new string[] { "1", "2", "3", "4", "5" };

	MudTextField<string> pwField1;
	MudForm form;
	DateTime? date = DateTime.Today;

	private async Task Submit()
	{
		await form.Validate();

		if (form.IsValid)
		{
			Snackbar.Add("Submited!");
		}
	}



	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			await JSRuntime.InvokeVoidAsync("initAutocomplete");

		}
	}

	private int counterValueVoyager = 0;
	private int counterValueEuro = 0;

	private void DecrementCounterVoyager()
	{
		if (counterValueVoyager > 0)
		{
			counterValueVoyager--;
		}
	}

	private void IncrementCounterVoyager()
	{

		counterValueVoyager++;
	}

	private void DecrementCounterEuro()
	{
		if (counterValueEuro > 0)
		{
			counterValueEuro--;
		}
	}

	private void IncrementCounterEuro()
	{

		counterValueEuro++;
	}
}
